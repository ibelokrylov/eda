// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  created_at      DateTime       @default(now())
  updated_at      DateTime?      @updatedAt
  deleted_at      DateTime?
  password        String
  hash            String
  email           String         @unique
  email_history   String[]
  first_name      String
  last_name       String
  active          Boolean        @default(false)
  is_blocked      Boolean        @default(false)
  blocked_comment Json?
  settings        Settings[]
  ConfirmCodes    ConfirmCodes[]
}

model ConfirmCodes {
  id     String          @id @default(uuid())
  user   User            @relation(fields: [userId], references: [id])
  userId String
  code   String
  type   TypeConfirmCode
}

enum TypeConfirmCode {
  CONFIRM_EMAIL
}

model Settings {
  id         String    @id @default(uuid())
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  data       Json
}

model CategoriesProduct {
  id          String    @id @default(uuid())
  created_at  DateTime  @default(now())
  updated_at  DateTime? @updatedAt
  deleted_at  DateTime?
  name        String    @unique
  products    Product[]
  description String?
}

model Product {
  id                  String            @id @default(uuid())
  created_at          DateTime          @default(now())
  updated_at          DateTime?         @updatedAt
  deleted_at          DateTime?
  name                String            @unique
  category            CategoriesProduct @relation(fields: [categoriesProductId], references: [id])
  categoriesProductId String
  protein             Float?
  fat                 Float?
  carbohydrate        Float?
  kcal                Float?
  country             String?
  description         String?
}
